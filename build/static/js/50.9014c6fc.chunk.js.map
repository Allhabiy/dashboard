{"version":3,"sources":["components/DoctorMarker.js","components/DoctorsMap.js","views/Dashboard/Dashboard.js","components/Firebase/firebase.js"],"names":["DoctorMarker","doctor","this","props","react_default","a","createElement","lib","position","location","icon","status","React","Component","mapStyles","width","height","padding","margin","DoctorsMap","withScriptjs","withGoogleMap","i","markers","doctors","map","DoctorMarker_DoctorMarker","key","lat","parseFloat","latitude","lng","longitude","style","defaultZoom","center","UCRef","require","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","ref","brandInfo","getStyle","cardChartData1","labels","datasets","label","backgroundColor","borderColor","data","cardChartOpts1","maintainAspectRatio","legend","display","scales","xAxes","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","min","Math","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","cardChartData2","cardChartOpts2","tooltips","enabled","custom","CustomTooltips","tension","cardChartOpts3","cardChartData3","random","floor","data1","data2","data3","push","Dashboard","state","quantity","x","list1","last_item","_this2","on","snapshot","datas","val","Object","keys","objectSpread","uid","list2","merged_list","concat","toConsumableArray","setState","slice","_this$state","forEach","item","index","parseInt","max_quantity","min_quantity","max_order","min_order","className","Row","Col","xs","sm","lg","Card","CardBody","es","options","marginTop","components_DoctorsMap","googleMapURL","loadingElement","containerElement","mapElement","CardFooter"],"mappings":"iQAKqBA,mLAIX,IAEEC,EAAWC,KAAKC,MAAhBF,OAER,OACIG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,SAAUN,KAAKC,MAAMM,SACrBC,KAAwB,MAAlBT,EAAOU,OAZX,uDADE,kEAE4BC,IAAMC,WCE1CC,EAAY,CAChBC,MAAO,MACPC,OAAQ,MACRC,QAAS,MACTC,OAAQ,OA2BKC,EArBIC,uBAAaC,wBAAc,SAAClB,GAE7C,IAAImB,EAAI,EACFC,EAAUpB,EAAMqB,QAAQC,IAAK,SAAAxB,GAAM,OAAIG,EAAAC,EAAAC,cAACoB,EAAD,CAC3BC,IAAKL,IACLrB,OAAQA,EACRQ,SAAU,CAACmB,IAAKC,WAAW5B,EAAO6B,UAAWC,IAAKF,WAAW5B,EAAO+B,gBAGtF,OACI5B,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACE0B,MAAOnB,EACPoB,YAAa,GACbC,OAAS,CAAEP,IAAM,UAAWG,IAAK,YAEhCR,MCfLa,ECjBWC,EAAQ,KAWIC,cATZ,CACbC,OAAQC,0CACRC,WAAYD,gCACZE,YAAa,uCACbC,UAAWH,gBACXI,cAAeJ,4BACfK,kBAAmBL,iBDSGM,WAAWC,MAI7BC,EAAYC,mBAAS,UAGrBC,EAAiB,CACrBC,OAAQ,GACRC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,uBACjBC,YAAa,wBACbC,KAAM,CAAC,MAKPC,EAAiB,CAErBC,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAEXC,OAAQ,CACNC,MAAO,CACL,CACEC,UAAW,CACTC,MAAO,cACPC,cAAe,eAEjBC,MAAO,CACLC,SAAU,EACVC,UAAW,iBAIjBC,MAAO,CACL,CACET,SAAS,EACTM,MAAO,CACLN,SAAS,EACTU,IAAKC,KAAKD,IAAIE,MAAMD,KAAMrB,EAAeE,SAAS,GAAGI,MAAQ,EAC7DiB,IAAKF,KAAKE,IAAID,MAAMD,KAAMrB,EAAeE,SAAS,GAAGI,MAAQ,MAIrEkB,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,KAObC,EAAiB,CACrB9B,OAAQ,GACRC,SAAU,CACR,CACEC,MAAO,WACPC,gBAAiBN,EACjBO,YAAa,wBACbC,KAAM,CAAC,MAKP0B,EAAiB,CACrBC,SAAU,CACRC,SAAS,EACTC,OAAQC,kBAEV5B,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAEXC,OAAQ,CACNC,MAAO,CACL,CACEC,UAAW,CACTC,MAAO,cACPC,cAAe,eAEjBC,MAAO,CACLC,SAAU,EACVC,UAAW,iBAIjBC,MAAO,CACL,CACET,SAAS,EACTM,MAAO,CACLN,SAAS,EACTU,IAAK,EACLG,IAAK,MAIbC,SAAU,CACRC,KAAM,CACJY,QAAS,KACTX,YAAa,GAEfC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,KAMbQ,EAAiB,CAErB9B,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAEXC,OAAQ,CACNC,MAAO,CACL,CACEC,UAAW,CACTC,MAAO,cACPC,cAAe,eAEjBC,MAAO,CACLC,SAAU,EACVC,UAAW,iBAIjBC,MAAO,CACL,CACET,SAAS,EACTM,MAAO,CACLN,SAAS,EACTU,IAAK,EACLG,IAAK,MAIbC,SAAU,CACRC,KAAM,CACJY,QAAS,KACTX,YAAa,GAEfC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,KASbS,EAAiB,CACrBtC,OAAQ,GACRC,SAAU,CACR,CACEC,MAAO,cACPC,gBAAiB,uBACjBC,YAAa,wBACbC,KAAM,CAAC,MASb,SAASkC,EAAOpB,EAAKG,GACnB,OAAOF,KAAKoB,MAAMpB,KAAKmB,UAAYjB,EAAMH,EAAM,GAAKA,GAQtD,IALA,IACIsB,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GAEHxE,EAAI,EAAGA,GALD,GAKgBA,IAC7BsE,EAAMG,KAAKL,EAAO,GAAI,MACtBG,EAAME,KAAKL,EAAO,GAAI,MACtBI,EAAMC,KAAK,QAKPC,6MAuCJC,MAAQ,CAENzE,QAAS,CACV,CACKM,SAAU,UACVE,UAAW,UACXkE,SAAU,EACVvF,OAAQ,EACRwF,EAAG,IAIPC,MAAO,CACR,CACKtE,SAAU,UACVE,UAAW,UACXkE,SAAU,EACVvF,OAAQ,EACRwF,EAAG,IAIPE,UAAW,CACTvE,SAAU,UACVE,UAAW,UACXkE,SAAU,EACVvF,OAAQ,EACRwF,EAAG,uFA9Da,IAAAG,EAAApG,KAElBkC,EAAMmE,GAAG,QAAS,SAAAC,GAChB,IAAIC,EAAQD,EAASE,MACfN,EAAQO,OAAOC,KAAKH,EAAMjD,MAAM/B,IAAI,SAAAE,GAAG,OAAAgF,OAAAE,EAAA,EAAAF,CAAA,GACxCF,EAAMjD,KAAK7B,GAD6B,CAE3CmF,IAAKnF,MAGDoF,EAAQJ,OAAOC,KAAKH,EAAMZ,OAAOpE,IAAI,SAAAE,GAAG,OAAAgF,OAAAE,EAAA,EAAAF,CAAA,GACzCF,EAAMZ,MAAMlE,GAD6B,CAE5CmF,IAAKnF,MAIHqF,EAAW,GAAAC,OAAAN,OAAAO,EAAA,EAAAP,CAAOP,GAAPO,OAAAO,EAAA,EAAAP,CAAiBI,IAIlCT,EAAKa,SAAS,CACV3F,QAASwF,EACTZ,MAAOA,EACPC,UAAWD,EAAMgB,OAAO,GAAG,oDA8C/BnC,EAAe9B,OAAS,GACxB8B,EAAe7B,SAAS,GAAGI,KAAO,GAClCN,EAAeC,OAAS,GACxBD,EAAeE,SAAS,GAAGI,KAAO,GAClCiC,EAAetC,OAAS,GACxBsC,EAAerC,SAAS,GAAGI,KAAO,oCAK1B,IAAA6D,EAE8BnH,KAAK+F,MAAnCzE,EAFA6F,EAEA7F,QAAS4E,EAFTiB,EAESjB,MAAOC,EAFhBgB,EAEgBhB,UAGxBD,EAAMkB,QAAQ,SAACC,EAAMC,GAGnBvC,EAAe9B,OAAO4C,KAAKyB,GAC3BvC,EAAe7B,SAAS,GAAGI,KAAKuC,KAAK0B,SAASF,EAAKrB,WACnDhD,EAAeC,OAAO4C,KAAKyB,GAC3BtE,EAAeE,SAAS,GAAGI,KAAKuC,KAAK0B,SAASF,EAAK5G,SACnD8E,EAAetC,OAAO4C,KAAKyB,GAC3B/B,EAAerC,SAAS,GAAGI,KAAKuC,KAAK0B,SAASF,EAAKpB,MAGrD,IAAIuB,EAAenD,KAAKE,IAAID,MAAMD,KAAMU,EAAe7B,SAAS,GAAGI,MAC/DmE,EAAepD,KAAKD,IAAIE,MAAMD,KAAMU,EAAe7B,SAAS,GAAGI,MACnE0B,EAAerB,OAAOQ,MAAM,GAAGH,MAAMO,IAAMiD,EAC3CxC,EAAerB,OAAOQ,MAAM,GAAGH,MAAMI,IAAMqD,EAE3C,IAAIC,EAAYrD,KAAKE,IAAID,MAAMD,KAAMkB,EAAerC,SAAS,GAAGI,MAC5DqE,EAAYtD,KAAKD,IAAIE,MAAMD,KAAMkB,EAAerC,SAAS,GAAGI,MAK9D,OAJFgC,EAAe3B,OAAOQ,MAAM,GAAGH,MAAMO,IAAMmD,EAC3CpC,EAAe3B,OAAOQ,MAAM,GAAGH,MAAMI,IAAMuD,EAIvCzH,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,mBACf1H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACI3H,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrB/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMN,UAAU,sBACd1H,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAUP,UAAU,QAClB1H,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,cAAezB,EAAUH,UACxC9F,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,qBAAqB7F,MAAO,CAAEjB,OAAQ,SACnDZ,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAM9E,KAAMyB,EAAgBsD,QAASrD,EAAgBlE,OAAQ,QAMhD,MAArBqF,EAAU1F,OAAeP,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAChD/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMN,UAAU,0BACd1H,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAUP,UAAU,QAClB1H,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,cAAezB,EAAU1F,QACxCP,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,qBAAqB7F,MAAO,CAAEjB,OAAQ,SACnDZ,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAM9E,KAAMN,EAAgBqF,QAAS9E,EAAgBzC,OAAQ,QAG5DZ,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAC5B/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMN,UAAU,yBACd1H,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAUP,UAAU,QAClB1H,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,cAAezB,EAAU1F,QACxCP,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,qBAAqB7F,MAAO,CAAEjB,OAAQ,SACnDZ,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAM9E,KAAMN,EAAgBqF,QAAS9E,EAAgBzC,OAAQ,QAS/DZ,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrB/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMN,UAAU,yBACd1H,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAUP,UAAU,QAClB1H,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,cAAezB,EAAUF,GACxC/F,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,qBAAqB7F,MAAO,CAAEjB,OAAQ,SACnDZ,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAM9E,KAAMiC,EAAgB8C,QAAS/C,EAAgBxE,OAAQ,SAMrEZ,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACE3H,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,KACE5H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,KACEhI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,KACEjI,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,gBAAgB7F,MAAO,CAAEjB,OAAQ,QAAYwH,UAAW,QACvEpI,EAAAC,EAAAC,cAACmI,EAAD,CACEjH,QAASA,EACTkH,aAAY,gIACZC,eAAgBvI,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAAEjB,OAAM,UACpC4H,iBAAkBxI,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAAEjB,OAAM,OAAUD,MAAK,UACrD8H,WAAYzI,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAAEjB,OAAM,cAMpCZ,EAAAC,EAAAC,cAACwI,EAAA,EAAD,KACE1I,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAKD,UAAU,4BArLTjH,aAmMTmF","file":"static/js/50.9014c6fc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Marker } from \"react-google-maps\";\n// import StethoscopeIcon from \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\";\nconst green = \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\";\nconst red = \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\";\nexport default class DoctorMarker extends React.Component {\n\n\n\n  render(){\n\n    const { doctor } = this.props;\n\n    return(\n        <Marker\n          position={this.props.location}\n          icon={doctor.status === '0'? red : green}\n        >\n        </Marker>\n    );\n  }\n}\n","// DoctorsMap.js\n\nimport React from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport DoctorMarker from \"./DoctorMarker\";\n\n\nconst mapStyles = {\n  width: '98%',\n  height: '40%',\n  padding: '0px',\n  margin: '0px',\n};\n\n\n\n\nconst DoctorsMap = withScriptjs(withGoogleMap((props) =>{\n\n  let i = 0;\n  const markers = props.doctors.map( doctor => <DoctorMarker\n                    key={i++}\n                    doctor={doctor}\n                    location={{lat: parseFloat(doctor.latitude), lng: parseFloat(doctor.longitude)}}\n                  />);\n\n  return (\n      <GoogleMap\n        style={mapStyles}\n        defaultZoom={13}\n        center={ { lat:  25.333827, lng: 49.597226 } }\n        >\n        {markers}\n      </GoogleMap>\n    );\n  }\n))\n\nexport default DoctorsMap;\n","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  Col,\n  Row,\n} from 'reactstrap';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport { getStyle } from '@coreui/coreui/dist/js/coreui-utilities'\n\nimport DoctorsMap from \"../../components/DoctorsMap\";\n\nimport  firebaseApp from \"../../components/Firebase/firebase\" // import firebase config setting\n\n\nvar UCRef = firebaseApp.database().ref(); // connection to firebase database.\n\n\n\nconst brandInfo = getStyle('--info')\n\n// Card Chart 1\nconst cardChartData1 = {\n  labels: [],\n  datasets: [\n    {\n      label: 'Status',\n      backgroundColor: 'rgba(255,255,255,.2)',\n      borderColor: 'rgba(255,255,255,.55)',\n      data: [0],\n    },\n  ],\n};\n\nconst cardChartOpts1 = {\n\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          color: 'transparent',\n          zeroLineColor: 'transparent',\n        },\n        ticks: {\n          fontSize: 2,\n          fontColor: 'transparent',\n        },\n\n      }],\n    yAxes: [\n      {\n        display: false,\n        ticks: {\n          display: false,\n          min: Math.min.apply(Math, cardChartData1.datasets[0].data) - 5,\n          max: Math.max.apply(Math, cardChartData1.datasets[0].data) + 5,\n        },\n      }],\n  },\n  elements: {\n    line: {\n      borderWidth: 1,\n    },\n    point: {\n      radius: 4,\n      hitRadius: 10,\n      hoverRadius: 4,\n    },\n  }\n}\n\n\n// Card Chart 2\nconst cardChartData2 = {\n  labels: [],\n  datasets: [\n    {\n      label: 'Quantity',\n      backgroundColor: brandInfo,\n      borderColor: 'rgba(255,255,255,.55)',\n      data: [0],\n    },\n  ],\n};\n\nconst cardChartOpts2 = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          color: 'transparent',\n          zeroLineColor: 'transparent',\n        },\n        ticks: {\n          fontSize: 2,\n          fontColor: 'transparent',\n        },\n\n      }],\n    yAxes: [\n      {\n        display: false,\n        ticks: {\n          display: false,\n          min: 0,\n          max: 0,\n        },\n      }],\n  },\n  elements: {\n    line: {\n      tension: 0.00001,\n      borderWidth: 1,\n    },\n    point: {\n      radius: 4,\n      hitRadius: 10,\n      hoverRadius: 4,\n    },\n  },\n};\n\n\nconst cardChartOpts3 = {\n\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          color: 'transparent',\n          zeroLineColor: 'transparent',\n        },\n        ticks: {\n          fontSize: 2,\n          fontColor: 'transparent',\n        },\n\n      }],\n    yAxes: [\n      {\n        display: false,\n        ticks: {\n          display: false,\n          min: 0,\n          max: 0,\n        },\n      }],\n  },\n  elements: {\n    line: {\n      tension: 0.00001,\n      borderWidth: 1,\n    },\n    point: {\n      radius: 4,\n      hitRadius: 10,\n      hoverRadius: 4,\n    },\n  },\n};\n\n\n\n\n// Card Chart 3\nconst cardChartData3 = {\n  labels: [],\n  datasets: [\n    {\n      label: 'No of Order',\n      backgroundColor: 'rgba(255,255,255,.2)',\n      borderColor: 'rgba(255,255,255,.55)',\n      data: [0],\n    },\n  ],\n};\n\n\n\n\n//Random Numbers\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nvar elements = 27;\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\n\nfor (var i = 0; i <= elements; i++) {\n  data1.push(random(50, 200));\n  data2.push(random(80, 100));\n  data3.push(65);\n}\n\n\n\nclass Dashboard extends Component {\n\n\n\n  componentDidMount() {\n\n    UCRef.on('value', snapshot => {\n      let datas = snapshot.val();\n      const list1 = Object.keys(datas.data).map(key => ({      // get data from firebase\n        ...datas.data[key],\n        uid: key,\n      }));\n\n      const list2 = Object.keys(datas.data2).map(key => ({      // get data from firebase\n        ...datas.data2[key],\n        uid: key,\n      }));\n\n\n    const merged_list = [...list1, ...list2];\n\n\n\n    this.setState({                // set state into firebase data\n        doctors: merged_list,\n        list1: list1,\n        last_item: list1.slice(-1)[0]\n    })\n  });\n\n\n\n\n\n  }\n\n\n\n\n  state = {                       // define state and initialize for this component\n\n    doctors: [\n\t\t\t{\n        latitude: 25.333827,\n        longitude: 49.597226,\n        quantity: 1,\n        status: 0,\n        x: 1,\n      },\n    ],\n\n    list1: [\n\t\t\t{\n        latitude: 25.333827,\n        longitude: 49.597226,\n        quantity: 1,\n        status: 0,\n        x: 1,\n      },\n    ],\n\n    last_item: {\n      latitude: 25.333827,\n      longitude: 49.597226,\n      quantity: 1,\n      status: 0,\n      x: 1,\n    },\n\t}\n\n\n  componentDidUpdate(){           // initialize history data as empty array\n    cardChartData2.labels = [];\n    cardChartData2.datasets[0].data = [];\n    cardChartData1.labels = [];\n    cardChartData1.datasets[0].data = [];\n    cardChartData3.labels = [];\n    cardChartData3.datasets[0].data = [];\n  }\n\n\n\n   render() {\n\n    const { doctors, list1, last_item } = this.state;    // get doctors object from state\n\n\n    list1.forEach((item, index) => {   // setting chart for history data\n\n\n      cardChartData2.labels.push(index);\n      cardChartData2.datasets[0].data.push(parseInt(item.quantity))\n      cardChartData1.labels.push(index);\n      cardChartData1.datasets[0].data.push(parseInt(item.status))\n      cardChartData3.labels.push(index);\n      cardChartData3.datasets[0].data.push(parseInt(item.x))\n  })\n\n    let max_quantity = Math.max.apply(Math, cardChartData2.datasets[0].data);\n    let min_quantity = Math.min.apply(Math, cardChartData2.datasets[0].data);\n    cardChartOpts2.scales.yAxes[0].ticks.max = max_quantity;\n    cardChartOpts2.scales.yAxes[0].ticks.min = min_quantity;\n\n    let max_order = Math.max.apply(Math, cardChartData3.datasets[0].data);\n    let min_order = Math.min.apply(Math, cardChartData3.datasets[0].data);\n    cardChartOpts3.scales.yAxes[0].ticks.max = max_order;\n    cardChartOpts3.scales.yAxes[0].ticks.min = min_order;\n\n\n      return (\n        <div className=\"animated fadeIn\">\n        <Row>\n            <Col xs=\"12\" sm=\"4\" lg=\"4\">\n              <Card className=\"text-white bg-info\">\n                <CardBody className=\"pb-0\">\n                  <div className=\"text-value\">{ last_item.quantity }</div>\n                  <div>Quantity</div>\n                </CardBody>\n                <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n                  <Line data={cardChartData2} options={cardChartOpts2} height={70} />\n                </div>\n              </Card>\n            </Col>\n\n\n         {last_item.status === '1'?<Col xs=\"12\" sm=\"4\" lg=\"4\">\n          <Card className=\"text-white  bg-success\">\n            <CardBody className=\"pb-0\">\n              <div className=\"text-value\">{ last_item.status }</div>\n              <div>Status</div>\n            </CardBody>\n            <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              <Line data={cardChartData1} options={cardChartOpts1} height={70} />\n            </div>\n          </Card>\n        </Col>:<Col xs=\"12\" sm=\"4\" lg=\"4\">\n          <Card className=\"text-white  bg-danger\">\n            <CardBody className=\"pb-0\">\n              <div className=\"text-value\">{ last_item.status }</div>\n              <div>Status</div>\n            </CardBody>\n            <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              <Line data={cardChartData1} options={cardChartOpts1} height={70} />\n            </div>\n          </Card>\n        </Col>\n\n}\n\n\n\n            <Col xs=\"12\" sm=\"4\" lg=\"4\">\n              <Card className=\"text-white bg-primary\">\n                <CardBody className=\"pb-0\">\n                  <div className=\"text-value\">{ last_item.x }</div>\n                  <div>No of Order</div>\n                </CardBody>\n                <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n                  <Line data={cardChartData3} options={cardChartOpts3} height={70} />\n                </div>\n              </Card>\n            </Col>\n\n          </Row>\n          <Row>\n            <Col>\n              <Card>\n                <CardBody>\n                  <div className=\"chart-wrapper\" style={{ height: 500 + 'px', marginTop: 0 + 'px' }}>\n                  <DoctorsMap\n                    doctors={doctors}\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyA3EZ2UPRHRkyBCHHiNugjAIBps_LgGSOQ&v=3.exp&libraries=geometry,drawing,places`}\n                    loadingElement={<div style={{ height: `100%` }} />}\n                    containerElement={<div style={{ height: `100%`, width: `100%` }} />}\n                    mapElement={<div style={{ height: `100%` }} />}\n                  />\n\n\n                </div>\n                </CardBody>\n                <CardFooter>\n                  <Row className=\"text-center\">\n\n                  </Row>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n      </div>\n      );\n  }\n}\n\n\n\nexport default Dashboard\n","var firebase = require('firebase');\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: \"https://arduino-bd534.firebaseio.com\",\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nvar firebaseApp = firebase.initializeApp(config);\n\n\nexport default firebaseApp;\n"],"sourceRoot":""}